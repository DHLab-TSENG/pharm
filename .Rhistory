load("~/GitHub/pharm/.RData")
load("~/GitHub/pharm/R/sysdata.rda")
setwd("C:/Users/88697/Documents/GitHub/pharm")
pkgdown::build_articles()
install.packages("devtools")
devtools::install_github("DHLab-TSENG/pharm")
library(pharm)
library(pharm)
library(dplyr)
knitr::kable(sample_data_subset)
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
Esophagitis_SBD_SCD_List <- getSbdScdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
source('~/GitHub/pharm/R/getRxcuiViaMaytreat.R')
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
knitr::kable(
head(Esophagitis_List)
)
Esophagitis_SBD_SCD_List <- getSbdScdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
source('~/GitHub/pharm/R/getRxcuiViaMayprevent.R')
source('~/GitHub/pharm/R/getMayprevent.R')
source('~/GitHub/pharm/R/getSbdRxcuiViaRxcui.R')
source('~/GitHub/pharm/R/getNdcViaSbdRxcui.R')
source('~/GitHub/pharm/R/getRxcuiViaNdc.R')
source('~/GitHub/pharm/R/getAtcViaRxcui.R')
source('~/GitHub/pharm/R/getRxcuiViaAtc.R')
source('~/GitHub/pharm/R/getNHINoViaHC.R')
source('~/GitHub/pharm/R/getNHINoViaRCFNo.R')
source('~/GitHub/pharm/R/getAtcViaNHINo.R')
source('~/GitHub/pharm/R/getDrugEra.R')
source('~/GitHub/pharm/R/calDailyDosage.R')
source('~/GitHub/pharm/R/calDDDsAccumulation.R')
source('~/GitHub/pharm/R/calDDDsRange.R')
source('~/GitHub/pharm/R/getAtcLevelPlot.R')
source('~/GitHub/pharm/R/getDrugEraPlot.R')
source('~/GitHub/pharm/R/getDispensingPlot.R')
source('~/GitHub/pharm/R/getRxcuiInfo.R')
source('~/GitHub/pharm/R/getMEDRTInfo.R')
source('~/GitHub/pharm/R/getBoSSViaRxcui.R')
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
knitr::kable(
head(Esophagitis_List)
)
Esophagitis_SBD_SCD_List <- getSbdScdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],RxCuiColName = RxCui,cores = 2)
head(Esophagitis_SBD_SCD_List)
@export
getSbdRxcuiViaRxcui <- function(df, RxCuiColName = RxCui, cores = 8){
colnames(df)[colnames(df)==deparse(substitute(RxCuiColName))] <- "wRxCui"
dfu <- df %>% select("wRxCui") %>% unique()
cl <- makeCluster(cores)
registerDoParallel(cl)
SbdData = foreach(i = 1:nrow(dfu),
.combine = "rbind",
.packages = "jsonlite") %dopar% {
sbd.rxcui <- tryCatch({fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxcui/", dfu$wRxCui[i], "/allrelated"))},
error = function(e){return("ERROR")})
if(sbd.rxcui == "ERROR"){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui="error",
stringsAsFactors = FALSE)
}else{
#sbd.rxcui <- fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxcui/", dfu$wRxCui[i], "/allrelated"))
sbd.df <- data.frame(sbd.rxcui$allRelatedGroup$conceptGroup$conceptProperties[sbd.rxcui$allRelatedGroup$conceptGroup$tty == "SBD"])
scd.df <- data.frame(sbd.rxcui$allRelatedGroup$conceptGroup$conceptProperties[sbd.rxcui$allRelatedGroup$conceptGroup$tty == "SCD"])
if(is.null(sbd.df$rxcui) & is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui=NA,
stringsAsFactors = FALSE)
}else if(!is.null(sbd.df$rxcui) & is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = sbd.df$rxcui,
stringsAsFactors = FALSE)
}else if(is.null(sbd.df$rxcui) & !is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = scd.df$rxcui,
stringsAsFactors = FALSE)
}else{
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = c(scd.df$rxcui, sbd.df$rxcui),
stringsAsFactors = FALSE)
}
}
RxSbdTable
}
stopCluster(cl)
SbdData <- unique(SbdData)
RxCui_SBD <- left_join(df,SbdData, by = "wRxCui")
colnames(RxCui_SBD)[colnames(RxCui_SBD)=="wRxCui"] <- deparse(substitute(RxCuiColName))
return (RxCui_SBD)
}
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],RxCuiColName = RxCui,cores = 2)
head(Esophagitis_SBD_SCD_List)
head(Esophagitis_SBD_SCD_List)
cl <- makeCluster(cores)
pkgdown::build_articles()
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
Esophagitis_List <- getRxcuiViaMaytreat("esophagitis")
knitr::kable(
head(Esophagitis_List)
)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
Esophagitis_SBD_SCD_List <- getSbdRxcuiViaRxcui(df = Esophagitis_List[3,],
RxCuiColName = RxCui,
cores = 2)
getSbdRxcuiViaRxcui <- function(df, RxCuiColName = RxCui, cores = 8){
colnames(df)[colnames(df)==deparse(substitute(RxCuiColName))] <- "wRxCui"
dfu <- df %>% select("wRxCui") %>% unique()
cl <- makeCluster(cores)
registerDoParallel(cl)
SbdData = foreach(i = 1:nrow(dfu),
.combine = "rbind",
.packages = "jsonlite") %dopar% {
sbd.rxcui <- tryCatch({fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxcui/", dfu$wRxCui[i], "/allrelated"))},
error = function(e){return("ERROR")})
if(sbd.rxcui == "ERROR"){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui="error",
stringsAsFactors = FALSE)
}else{
#sbd.rxcui <- fromJSON(paste0("https://rxnav.nlm.nih.gov/REST/rxcui/", dfu$wRxCui[i], "/allrelated"))
sbd.df <- data.frame(sbd.rxcui$allRelatedGroup$conceptGroup$conceptProperties[sbd.rxcui$allRelatedGroup$conceptGroup$tty == "SBD"])
scd.df <- data.frame(sbd.rxcui$allRelatedGroup$conceptGroup$conceptProperties[sbd.rxcui$allRelatedGroup$conceptGroup$tty == "SCD"])
if(is.null(sbd.df$rxcui) & is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui=NA,
stringsAsFactors = FALSE)
}else if(!is.null(sbd.df$rxcui) & is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = sbd.df$rxcui,
stringsAsFactors = FALSE)
}else if(is.null(sbd.df$rxcui) & !is.null(scd.df$rxcui)){
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = scd.df$rxcui,
stringsAsFactors = FALSE)
}else{
RxSbdTable <- data.frame(wRxCui=dfu$wRxCui[i],
SBD.rxcui = c(scd.df$rxcui, sbd.df$rxcui),
stringsAsFactors = FALSE)
}
}
RxSbdTable
}
stopCluster(cl)
SbdData <- unique(SbdData)
RxCui_SBD <- left_join(df,SbdData, by = "wRxCui")
colnames(RxCui_SBD)[colnames(RxCui_SBD)=="wRxCui"] <- deparse(substitute(RxCuiColName))
return (RxCui_SBD)
}
#' @importFrom parallel makeCluster
cl <- makeCluster(cores)
